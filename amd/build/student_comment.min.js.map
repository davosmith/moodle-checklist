{"version":3,"sources":["../src/student_comment.js"],"names":["define","$","Ajax","Notification","String","init","cmid","classPrefix","comments","currentComments","i","comment","value","addEventListener","e","newComment","target","trim","classString","classList","checklistitemid","substr","lastIndexOf","length","spinner","css","call","methodname","args","done","data","defaultValue","addNotification","message","get_string","type","fail","exception"],"mappings":"AAsBAA,OAAM,iCAAC,CAAC,QAAD,CAAW,WAAX,CAAwB,mBAAxB,CAA6C,UAA7C,CAAD,CAA2D,SAASC,CAAT,CAAYC,CAAZ,CAAkBC,CAAlB,CAAgCC,CAAhC,CAAwC,CACrG,MAAO,CACHC,IAAI,CAAE,cAASC,CAAT,CAAe,CAMjB,OALMC,CAAAA,CAAW,CAAG,kBAKpB,CAJIC,CAAQ,CAAGP,CAAC,CAAC,sBAAD,CAIhB,CADIQ,CAAe,CAAG,EACtB,YAASC,CAAT,EACI,GAAIC,CAAAA,CAAO,CAAGH,CAAQ,CAACE,CAAD,CAAtB,CACAD,CAAe,CAACC,CAAD,CAAf,CAAqBC,CAAO,CAACC,KAA7B,CACAD,CAAO,CAACE,gBAAR,CAAyB,QAAzB,CAAmC,SAASC,CAAT,CAAY,CAC3C,GAAMC,CAAAA,CAAU,CAAGD,CAAC,CAACE,MAAF,CAASJ,KAAT,CAAeK,IAAf,EAAnB,CAEA,GAAIR,CAAe,CAACC,CAAD,CAAf,GAAuBK,CAA3B,CAAuC,IAC/BG,CAAAA,CAAW,CAAGJ,CAAC,CAACE,MAAF,CAASG,SAAT,CAAmB,CAAnB,CADiB,CAG/BC,CAAe,CAAGF,CAAW,CAACG,MAAZ,CAAmBH,CAAW,CAACI,WAAZ,CAAwBf,CAAxB,EAAuCA,CAAW,CAACgB,MAAtE,CAHa,CAK/BC,CAAO,CAAG,kCAAoCJ,CALf,CAMnCnB,CAAC,CAACuB,CAAD,CAAD,CAAWC,GAAX,CAAe,SAAf,CAA0B,cAA1B,EAcAvB,CAAI,CAACwB,IAAL,CAAU,CAJI,CACVC,UAAU,CAAE,sCADF,CAEVC,IAAI,CAVG,CACP,QAAW,CACP,YAAeb,CADR,CAEP,gBAAmBK,CAFZ,CAGP,KAAQd,CAHD,CADJ,CAQG,CAIJ,CAAV,EAAqB,CAArB,EAAwBuB,IAAxB,CAA6B,SAASC,CAAT,CAAe,CACxC7B,CAAC,CAACuB,CAAD,CAAD,CAAWC,GAAX,CAAe,SAAf,CAA0B,MAA1B,EACA,GAAI,KAAAK,CAAJ,CAAmB,CACfrB,CAAe,CAACC,CAAD,CAAf,CAAqBK,CAArB,CACAJ,CAAO,CAACoB,YAAR,CAAuBhB,CAC1B,CAHD,IAGO,CACHZ,CAAY,CAAC6B,eAAb,CAA6B,CACzBC,OAAO,CAAE7B,CAAM,CAAC8B,UAAP,CAAkB,+BAAlB,CAAmD,eAAnD,CADgB,CAEzBC,IAAI,CAAE,OAFmB,CAA7B,CAIH,CACJ,CAXD,EAWGC,IAXH,CAWQjC,CAAY,CAACkC,SAXrB,CAYH,CACJ,CApCD,CAHJ,EAAS3B,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,CAAQ,CAACe,MAA7B,CAAqCb,CAAC,EAAI,CAA1C,CAA6C,GAApCA,CAAoC,CAwC5C,CACJ,CAhDE,CAkDV,CAnDK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Push student comments to checklist plugin via ajax.\n *\n * @module     mod_checklist/student_comments\n * @copyright  2021 Kristian Ringer <kristian.ringer@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/str'], function($, Ajax, Notification, String) {\n    return {\n        init: function(cmid) {\n            const classPrefix = 'studentcommentid';\n            let comments = $('.studentcommentinput');\n\n            // Store the initial state of each comment. Only want to update server if comment changed on blur.\n            let currentComments = [];\n            for (let i = 0; i < comments.length; i += 1) {\n                let comment = comments[i];\n                currentComments[i] = comment.value;\n                comment.addEventListener('change', function(e) {\n                    const newComment = e.target.value.trim();\n                    // Update only if it changed, using the external function Ajax call.\n                    if (currentComments[i] !== newComment) {\n                        let classString = e.target.classList[0];\n                        // Get the item id from the end of the first class name, eg. studentcommentid13.\n                        let checklistitemid = classString.substr(classString.lastIndexOf(classPrefix) + classPrefix.length);\n\n                        let spinner = '#checklistspinnerstudentcomment' + checklistitemid;\n                        $(spinner).css('display', 'inline-block');\n\n                        let args = {\n                            'comment': {\n                                'commenttext': newComment,\n                                'checklistitemid': checklistitemid,\n                                'cmid': cmid,\n                            }\n                        };\n\n                        let request = {\n                            methodname: 'mod_checklist_update_student_comment',\n                            args: args,\n                        };\n                        Ajax.call([request])[0].done(function(data) {\n                            $(spinner).css('display', 'none');\n                            if (data === true) {\n                                currentComments[i] = newComment;\n                                comment.defaultValue = newComment;\n                            } else {\n                                Notification.addNotification({\n                                    message: String.get_string('update_student_comment_failed', 'mod_checklist'),\n                                    type: 'error',\n                                });\n                            }\n                        }).fail(Notification.exception);\n                    }\n                });\n            }\n        }\n    };\n});\n"],"file":"student_comment.min.js"}