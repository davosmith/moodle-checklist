{"version":3,"file":"update_checklist.min.js","sources":["../src/update_checklist.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Update checklists\n *\n * @module      mod_checklist/update_checklist\n * @copyright   2022 Catalyst IT\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport Notification from 'core/notification';\n\nlet checklists = [];\nlet updateList = [];\nlet updateTimeout = null;\nlet sesskey = null;\n\nexport const init = (cmid, givensesskey, updateprogress) => {\n    sesskey = givensesskey;\n    let checklist = {\n        'cmid': cmid,\n        'items': [],\n        'optionalcount': 0,\n        'requiredcount': 0,\n        'requiredchecked': 0,\n        'optionalchecked': 0,\n        'updateprogress': updateprogress,\n    };\n\n    // Initialise the given checklist cmid\n    let items = $('.checklistitem[data-cmid=\"' + cmid + '\"]');\n    for (let i = 0; i < items.length; i++) {\n        let item = items[i];\n        item.addEventListener('click', checkClicked);\n        if (item.classList.contains('itemoptional')) {\n            checklist.optionalcount++;\n            if (item.checked) {\n                checklist.optionalchecked++;\n            }\n        } else {\n            checklist.requiredcount++;\n            if (item.checked) {\n                checklist.requiredchecked++;\n            }\n        }\n    }\n\n    window.addEventListener('visibilitychange', () => {\n        sendBatchUpdate(cmid, true);\n    }, false);\n\n    checklists[cmid] = checklist;\n};\n\nconst checkClicked = (event) => {\n    let item = event.currentTarget;\n    let cmid = item.dataset.cmid;\n\n    if (checklists[cmid].updateprogress) {\n        let change = item.checked ? 1 : -1;\n        if (item.classList.contains('itemoptional')) {\n            checklists[cmid].optionalchecked += change;\n        } else {\n            checklists[cmid].requiredchecked += change;\n        }\n        updateProgressBar(cmid);\n    }\n\n    // Save check to list for updating\n    updateServer(cmid, item.value, item.checked);\n};\n\nconst updateProgressBar = (cmid) => {\n    let checklist = checklists[cmid];\n    let prreq = $('.checklistbox[data-cmid=\"' + cmid + '\"] > #checklistprogressrequired');\n\n    let allpercent = (checklist.optionalchecked + checklist.requiredchecked) * 100.0 /\n        (checklist.optionalcount + checklist.requiredcount);\n    let inner = $('.checklistbox[data-cmid=\"' + cmid + '\"] #checklistprogressall .checklist_progress_inner')[0];\n    let inneranim = $('.checklistbox[data-cmid=\"' + cmid + '\"] #checklistprogressall .checklist_progress_anim')[0];\n    let oldpercent = parseFloat(inner.style.width.replace('%', ''));\n    $(inner).stop(true, true);\n    $(inneranim).stop(true, true);\n\n    if (allpercent > oldpercent) {\n        inneranim.style.width = allpercent + '%';\n        $(inner).animate({\n            width: allpercent + '%'\n        }, 1000);\n    } else if (allpercent < oldpercent) {\n        inner.style.width = allpercent + '%';\n        $(inneranim).animate({\n            width: allpercent + '%'\n        }, 1000);\n    }\n    $('.checklistbox[data-cmid=\"' + cmid + '\"] #checklistprogressall .checklist_progress_percent')\n        .text(' ' + allpercent.toFixed(0) + '% ');\n\n    if (prreq.length) {\n        let reqpercent = checklist.requiredchecked * 100.0 / checklist.requiredcount;\n        inner = $('.checklistbox[data-cmid=\"' + cmid + '\"] #checklistprogressrequired .checklist_progress_inner')[0];\n        inneranim = $('.checklistbox[data-cmid=\"' + cmid + '\"] #checklistprogressrequired .checklist_progress_anim')[0];\n        oldpercent = parseFloat(inner.style.width.replace('%', ''));\n        $(inner).stop(true, true);\n        $(inneranim).stop(true, true);\n\n        if (reqpercent > oldpercent) {\n            inneranim.style.width = reqpercent + '%';\n            $(inner).animate({\n                width: reqpercent + '%'\n            }, 1000);\n        } else if (reqpercent < oldpercent) {\n            inner.style.width = reqpercent + '%';\n            $(inneranim).animate({\n                width: reqpercent + '%'\n            }, 1000);\n        }\n        $('.checklistbox[data-cmid=\"' + cmid + '\"] #checklistprogressrequired .checklist_progress_percent')\n            .text(' ' + reqpercent.toFixed(0) + '% ');\n    }\n};\n\nconst updateServer = (cmid, itemid, state) => {\n    // Remove existing update record if they are a different state.\n    for (let i = 0; i < updateList.length; i++) {\n        if (updateList[i].itemid === itemid) {\n            if (updateList[i].state !== state) {\n                updateList.splice(i, 1);\n                break;\n            }\n            return;\n        }\n    }\n\n    updateList.push({'itemid': itemid, 'state': state});\n\n    if (updateTimeout) {\n        window.clearTimeout(updateTimeout);\n    }\n    updateTimeout = window.setTimeout(function() {\n        sendBatchUpdate(cmid, false);\n    }, 500);\n    showSpinner(cmid);\n};\n\nconst sendBatchUpdate = (cmid, unload) => {\n    if (updateTimeout) {\n        window.clearTimeout(updateTimeout);\n        updateTimeout = null;\n    }\n    if (updateList.length === 0) {\n        return;\n    }\n\n    let params = [];\n    for (let i = 0; i < updateList.length; i++) {\n        params.push('items[' + updateList[i].itemid + ']=' + (updateList[i].state ? 1 : 0));\n    }\n    params.push('sesskey=' + sesskey);\n    params.push('id=' + cmid);\n    let url = M.cfg.wwwroot + '/mod/checklist/updatechecks.php?' + params.join('&');\n\n    updateList = [];\n\n    if (!unload) {\n        $.ajax({\n            type: \"POST\",\n            async: true,\n            url: url,\n        }).then((data) => {\n            hideSpinner(cmid);\n            if (data !== 'OK') {\n                Notification.alert('', data);\n            }\n            return null;\n        }).fail(Notification.exception);\n    } else {\n        navigator.sendBeacon(url);\n    }\n};\n\nconst hideSpinner = (cmid) => {\n    $('#checklistspinner[data-cmid=\"' + cmid + '\"]').hide();\n};\n\nconst showSpinner = (cmid) => {\n    $('#checklistspinner[data-cmid=\"' + cmid + '\"]').show();\n};\n"],"names":["checklists","updateList","updateTimeout","sesskey","cmid","givensesskey","updateprogress","checklist","items","i","length","item","addEventListener","checkClicked","classList","contains","optionalcount","checked","optionalchecked","requiredcount","requiredchecked","window","sendBatchUpdate","event","currentTarget","dataset","change","updateProgressBar","updateServer","value","prreq","allpercent","inner","inneranim","oldpercent","parseFloat","style","width","replace","stop","animate","text","toFixed","reqpercent","itemid","state","splice","push","clearTimeout","setTimeout","showSpinner","unload","params","url","M","cfg","wwwroot","join","navigator","sendBeacon","ajax","type","async","then","data","hideSpinner","alert","fail","Notification","exception","hide","show"],"mappings":"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"}